<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\keil_output\app_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\keil_output\app_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sat May 11 21:59:23 2019
<BR><P>
<H3>Maximum Stack Usage =         48 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; Chip_RTC_Time_GetValue &rArr; Chip_BusSync_ReadReg
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3f]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">MemManage_Handler</a><BR>
 <LI><a href="#[9]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">UsageFault_Handler</a><BR>
 <LI><a href="#[b]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SVC_Handler</a><BR>
 <LI><a href="#[c]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">DebugMon_Handler</a><BR>
 <LI><a href="#[d]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">PendSV_Handler</a><BR>
 <LI><a href="#[27]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[25]">C2D_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1f]">CT16B0_IRQHandler</a> from main.o(i.CT16B0_IRQHandler) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[21]">CT32B0_IRQHandler</a> from main.o(i.CT32B0_IRQHandler) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[2a]">EEPROM_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[29]">FLASH_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1e]">I2C0_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[26]">I2D_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1c]">NFC_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[f]">PIO0_0_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[19]">PIO0_10_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[10]">PIO0_1_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[11]">PIO0_2_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[12]">PIO0_3_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[13]">PIO0_4_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[14]">PIO0_5_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[15]">PIO0_6_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[16]">PIO0_7_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[17]">PIO0_8_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[18]">PIO0_9_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[2b]">PIO0_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[22]">PMUBOD_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[20]">PMUFLD_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1a]">RFFIELD_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1b]">RTCPWREQ_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from timer.o(i.RTC_IRQHandler) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[23]">SSP0_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(.text)
 <LI><a href="#[24]">TSEN_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[28]">WDT_IRQHandler</a> from keil_startup_lpc8nxx.o(.text) referenced from keil_startup_lpc8nxx.o(RESET)
 <LI><a href="#[2e]">__main</a> from __main.o(!!!main) referenced from keil_startup_lpc8nxx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[5f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[60]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[61]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[62]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[63]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[64]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[65]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[66]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[67]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[68]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[69]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[70]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[71]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[72]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[73]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[74]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[75]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[76]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[78]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[30]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7b]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[7c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Init &rArr; Chip_RTC_DeInit &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7d]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[7e]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>C2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EEPROM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>NFC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PIO0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PIO0_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PIO0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PIO0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIO0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PIO0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PIO0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PIO0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PIO0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PIO0_8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PIO0_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PMUBOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PMUFLD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RFFIELD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTCPWREQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TSEN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc8nxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, keil_startup_lpc8nxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_GetClockFreq
</UL>

<P><STRONG><a name="[82]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[85]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[86]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[87]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>Board_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Board_Init &rArr; Chip_IOCON_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[1f]"></a>CT16B0_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, main.o(i.CT16B0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CT32B0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.CT32B0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>Chip_BusSync_ReadReg</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bussync_8nxx.o(i.Chip_BusSync_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_BusSync_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WaitSync
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_GetRawStatus
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Time_GetValue
</UL>

<P><STRONG><a name="[47]"></a>Chip_BusSync_WriteReg</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, bussync_8nxx.o(i.Chip_BusSync_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WaitSync
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Wakeup_SetReload
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_ClearRawStatus
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_SetEnabledMask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_DeInit
</UL>

<P><STRONG><a name="[51]"></a>Chip_Clock_Peripheral_DisableClock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_8nxx.o(i.Chip_Clock_Peripheral_DisableClock))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_DeInit
</UL>

<P><STRONG><a name="[4f]"></a>Chip_Clock_Peripheral_EnableClock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_8nxx.o(i.Chip_Clock_Peripheral_EnableClock))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_TIMER_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
</UL>

<P><STRONG><a name="[49]"></a>Chip_Clock_System_GetClockDiv</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_8nxx.o(i.Chip_Clock_System_GetClockDiv))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_GetClockFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>Chip_Clock_System_GetClockFreq</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, clock_8nxx.o(i.Chip_Clock_System_GetClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_System_GetClockFreq &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_GetClockDiv
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>Chip_Clock_System_SetClockDiv</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, clock_8nxx.o(i.Chip_Clock_System_SetClockDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_System_SetClockDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Flash_GetNumWaitStates
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Flash_GetHighPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockFreq
</UL>

<P><STRONG><a name="[4e]"></a>Chip_Clock_System_SetClockFreq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clock_8nxx.o(i.Chip_Clock_System_SetClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_Clock_System_SetClockFreq &rArr; Chip_Clock_System_SetClockDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockDiv
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[4c]"></a>Chip_Flash_GetHighPowerMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, flash_8nxx.o(i.Chip_Flash_GetHighPowerMode))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockDiv
</UL>

<P><STRONG><a name="[4d]"></a>Chip_Flash_GetNumWaitStates</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash_8nxx.o(i.Chip_Flash_GetNumWaitStates))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockDiv
</UL>

<P><STRONG><a name="[44]"></a>Chip_GPIO_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gpio_8nxx.o(i.Chip_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_Peripheral_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[43]"></a>Chip_IOCON_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, iocon_8nxx.o(i.Chip_IOCON_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_IOCON_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_Peripheral_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[5a]"></a>Chip_IOCON_SetPinConfig</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, iocon_8nxx.o(i.Chip_IOCON_SetPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_IOCON_SetPinConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[50]"></a>Chip_RTC_DeInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rtc_8nxx.o(i.Chip_RTC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Chip_RTC_DeInit &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WriteReg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_Peripheral_DisableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[52]"></a>Chip_RTC_Int_ClearRawStatus</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc_8nxx.o(i.Chip_RTC_Int_ClearRawStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_RTC_Int_ClearRawStatus &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>Chip_RTC_Int_GetRawStatus</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc_8nxx.o(i.Chip_RTC_Int_GetRawStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_RTC_Int_GetRawStatus &rArr; Chip_BusSync_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>Chip_RTC_Int_SetEnabledMask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc_8nxx.o(i.Chip_RTC_Int_SetEnabledMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_RTC_Int_SetEnabledMask &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[55]"></a>Chip_RTC_Time_GetValue</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtc_8nxx.o(i.Chip_RTC_Time_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_RTC_Time_GetValue &rArr; Chip_BusSync_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[56]"></a>Chip_RTC_Wakeup_SetReload</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc_8nxx.o(i.Chip_RTC_Wakeup_SetReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_RTC_Wakeup_SetReload &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>Chip_TIMER_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timer_8nxx.o(i.Chip_TIMER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_TIMER_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_Peripheral_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_IRQHandler &rArr; Chip_RTC_Wakeup_SetReload &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Wakeup_SetReload
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_GetRawStatus
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_ClearRawStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Handler &rArr; Chip_RTC_Time_GetValue &rArr; Chip_BusSync_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Time_GetValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc8nxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main &rArr; Init &rArr; Chip_RTC_DeInit &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_GetClockFreq
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_GetClockDiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinState
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5b]"></a>Chip_GPIO_SetPinState</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(i.Chip_GPIO_SetPinState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_GPIO_SetPinState
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>Init</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, main.o(i.Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Init &rArr; Chip_RTC_DeInit &rArr; Chip_BusSync_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_TIMER_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_Int_SetEnabledMask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_RTC_DeInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_SetPinConfig
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_System_SetClockFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_Peripheral_EnableClock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[46]"></a>Chip_BusSync_WaitSync</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bussync_8nxx.o(i.Chip_BusSync_WaitSync))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_WriteReg
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_BusSync_ReadReg
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
